#%RAML 1.0
---
title: API for Services
version: v1
baseUri: https://{serverName}/{appName}-{version}
baseUriParameters:
  serverName:
    description: the name of the server
    example: api-dev.munich-airport.de
  appName:
    description: the name of the application
    example: aci-service

mediaType: application/json

securitySchemes:
  securedWithApiKey:   !include ../restBase/traits/securedWithApiKey.yaml

types:
  Service:             !include model/service.full.schema.json
  ServiceList:         !include model/serviceList.schema.json
  ServiceCategory:     !include model/serviceCategory.full.schema.json
  ServiceCategoryList: !include model/serviceCategoryList.schema.json

traits:
  UnkownKey:           !include ../restBase/traits/unknownKeyResponse.yaml
  AcceptLang:          !include ../restBase/traits/acceptLanguageHeader.yaml
  BadRequest:          !include ../restBase/traits/badRequestResponse.yaml
  SearchQuery:
    queryParameters:
      searchString:
        type: string
        description: The string to search for a arrival
        required: false
      length:
        type: integer
        description: The length of the returning flightslist
        default: 50
        required: false
      offset:
        type: integer
        description: The offset of the returning list.
        default: 0
        required: false
/service/{serviceId}:
  uriParameters:
    serviceId:
      description: The id of the service
      type: integer
  get:
    description: |
      Returns detailed information for a specific service.
      The language has to be given as parameter for the selection in the data base.
    is: [UnkownKey, AcceptLang]
    responses:
      200:
        body:
          type: Service
      404:
        description: No service with the specified serviceID could be found
  /{locationId}:
    uriParameters:
      locationId:
        description: The id of the location for the specified service
        type: integer
    get:
      description: |
        Returns detailed information for a specific service.
        The language has to be given as parameter for the selection in the data base.
      is: [UnkownKey, AcceptLang]
      responses:
        200:
          body:
            type: Service
        404:
          description: The specified serviceId and locationId could not be found

/services/{airportCode}:
  is: [BadRequest]
  uriParameters:
    airportCode:
      description: Code (IATA or ICAO) of the airport
      type: string
      minLength: 3
      maxLength: 4
  get:
    description: |
      Returns detailed information as a list for the search.
      The language has to be given as parameter for the selection in the data base.
    is: [AcceptLang, SearchQuery]
    responses:
      200:
        body:
          type: ServiceList

/topServices/{airportCode}:
  is: [BadRequest]
  uriParameters:
    airportCode:
      description: Code (IATA or ICAO) of the airport
      type: string
      minLength: 3
      maxLength: 4
  get:
    queryParameters:
      flightId:
        description: The id of the flight
        displayName: flightId
        type: integer
        example: 7890123
        required: false
    description: |
      Returns a list of available top services for the given airport and user identified by oauth-token.
      The top services can differ for different users and is context based.
      The list items have to be ordered. There should be only maximum 4 top services.
      The language has to be given as parameter for the selection in the database.
    is: [AcceptLang]
    responses:
      200:
        body:
          type: ServiceList

/serviceCategories/{airportCode}:
  is: [BadRequest]
  uriParameters:
    airportCode:
      description: Code (IATA or ICAO) of the airport
      type: string
      minLength: 3
      maxLength: 4
  get:
    description: |
      Returns a list of available service categories for a specific airport.
      The language has to be given as parameter for the selection in the data base.
    is: [AcceptLang]
    responses:
      200:
        body:
          type: ServiceCategoryList
      204:
        description: no content for language found

/serviceCategory/{categoryId}:
  uriParameters:
    categoryId:
      description: The id of the category
      type: integer
  get:
    description: |
      Returns a list of available service categories for a specific airport.
      The language has to be given as parameter for the selection in the data base.
    is: [UnkownKey,AcceptLang]
    responses:
      200:
        body:
          type: ServiceCategory
      404:
        description: No category for the specified categoryId could be found
